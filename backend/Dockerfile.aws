# Multi-stage build for AWS ECS deployment (AL2 + Node 16, glibc-compatible)
FROM public.ecr.aws/amazonlinux/amazonlinux:2 AS builder

# Install required tools
RUN yum update -y && yum install -y curl tar gzip xz

# Install Node.js 16 (compatible with glibc 2.26 on AL2)
RUN curl -fsSL https://nodejs.org/dist/v16.20.2/node-v16.20.2-linux-x64.tar.xz \
  | tar -xJ -C /usr/local --strip-components=1

# Verify
RUN node --version && npm --version

WORKDIR /app
COPY package*.json ./
RUN npm install --omit=dev && npm cache clean --force
COPY . .
RUN useradd -r -s /bin/false nodejs

FROM public.ecr.aws/amazonlinux/amazonlinux:2 AS production
RUN yum update -y && yum install -y curl tar gzip xz

# Install Node 16 in production too
RUN curl -fsSL https://nodejs.org/dist/v16.20.2/node-v16.20.2-linux-x64.tar.xz \
  | tar -xJ -C /usr/local --strip-components=1

# dumb-init
RUN curl -L -o /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_x86_64 \
  && chmod +x /usr/local/bin/dumb-init

WORKDIR /app
RUN useradd -r -s /bin/false nodejs

COPY --from=builder --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/src ./src
COPY --from=builder --chown=nodejs:nodejs /app/package*.json ./

USER nodejs
EXPOSE 3001
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "src/index.js"]
